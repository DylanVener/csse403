BorderedMorph subclass: #LOGame	instanceVariableNames: 'cells'	classVariableNames: ''	poolDictionaries: ''	category: 'PBE-LightsOut'!!LOGame methodsFor: 'accessing' stamp: 'Buffalo 2/4/2016 09:50'!cellsPerSide"The number of cells along each side of the game"^ 10! !!LOGame methodsFor: 'game logic' stamp: 'Buffalo 2/4/2016 10:12'!toggleNeighboursOfCellAt: i at: j	i > 1		ifTrue: [ (cells at: i - 1 at: j) toggleState ].	i < self cellsPerSide		ifTrue: [ (cells at: i + 1 at: j) toggleState ].	j > 1		ifTrue: [ (cells at: i at: j - 1) toggleState ].	j < self cellsPerSide		ifTrue: [ (cells at: i at: j + 1) toggleState ]! !!LOGame methodsFor: 'initialization' stamp: 'Buffalo 2/4/2016 10:19'!newCellAt: i at: j	"Create a cell for position (i,j) and add it to my on-screenrepresentation at the appropriate screen position. Answer thenew cell"	| c origin |	c := LOCell new.	origin := self innerBounds origin.	self addMorph: c.	c position: ((i - 1) * c width) @ ((j - 1) * c height) + origin.	c mouseAction: [ self toggleNeighboursOfCellAt: i at: j ].	^c! !!LOGame methodsFor: 'initialization' stamp: 'Buffalo 2/4/2016 09:51'!initialize	| sampleCell width height n |	super initialize.	n := self cellsPerSide.	sampleCell := LOCell new.	width := sampleCell width.	height := sampleCell height.	self bounds: (5 @ 5 extent: (width * n) @ (height * n) + (2 * self borderWidth)).	cells := Matrix new: n tabulate: [ :i :j | self newCellAt: i at: j ]! !SimpleSwitchMorph subclass: #LOCell	instanceVariableNames: 'mouseAction'	classVariableNames: ''	poolDictionaries: ''	category: 'PBE-LightsOut'!!LOCell methodsFor: 'event handling' stamp: 'Buffalo 2/4/2016 10:15'!mouseUp: anEvent	mouseAction value! !!LOCell methodsFor: 'accessing' stamp: 'Buffalo 2/4/2016 10:15'!mouseAction: aBlock	^ mouseAction := aBlock! !!LOCell methodsFor: 'initialization' stamp: 'Buffalo 2/4/2016 09:42'!initialize	super initialize.	self label: ''.	self borderWidth: 2.	bounds := 0 @ 0 corner: 16 @ 16.	offColor := Color paleYellow.	onColor := Color paleBlue darker.	self useSquareCorners.	self turnOff ! !